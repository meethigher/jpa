2021-04-10 12:53:30 HibernatePersistenceProvider.java DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-10 12:53:31 HibernatePersistenceProvider.java DEBUG Located and parsed 1 persistence units; checking each
2021-04-10 12:53:31 HibernatePersistenceProvider.java DEBUG Checking persistence-unit [name=myJpa, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [myJpa]
2021-04-10 12:53:31 ProviderChecker.java DEBUG Persistence-unit [myJpa] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2021-04-10 12:53:31 LogHelper.java DEBUG PersistenceUnitInfo [
	name: myJpa
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Develop/JavaDev/SpringDataJPA-notes/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernatef.show_sql: true
		javax.persistence.jdbc.password: 1050121804
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
		hibernatef.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2021-04-10 12:53:31 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-10 12:53:31 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-10 12:53:31 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-10 12:53:31 Version.java INFO HHH000412: Hibernate ORM core version 5.4.30.Final
2021-04-10 12:53:31 Environment.java DEBUG HHH000206: hibernate.properties not found
2021-04-10 12:53:31 ServiceBinding.java DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-10 12:53:31 RegionFactoryInitiator.java DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-10 12:53:31 RegionFactoryInitiator.java DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-10 12:53:31 JavaReflectionManager.java INFO HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26df6e3a
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52e7a6b2
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@42a15bdc
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration character -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration char -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration int -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@4f74980d
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@4f74980d
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f74980d
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46271dd6
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46271dd6
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6fa34d52
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6fa34d52
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration string -> org.hibernate.type.StringType@6337c201
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@6337c201
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4032d386
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b74ac8
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration url -> org.hibernate.type.UrlType@2b175c00
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b175c00
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@6d026701
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d026701
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7674b62c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7674b62c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@c7045b9
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@c7045b9
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7357a011
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7357a011
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c01cfa1
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c01cfa1
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ce6c6ec
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ce6c6ec
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b45c0e
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b45c0e
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3d57c7
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3d57c7
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration date -> org.hibernate.type.DateType@75d2da2d
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@75d2da2d
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration time -> org.hibernate.type.TimeType@352c1b98
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@352c1b98
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@409c54f
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fcf2fc1
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@479ceda0
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@2d6c53fc
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d6c53fc
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7ceb3185
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ceb3185
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@20f5281c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20f5281c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration class -> org.hibernate.type.ClassType@1bd39d3c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bd39d3c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@455b6df1
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@455b6df1
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41ab013
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@8e50104
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@8e50104
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@8e50104
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@51133c06
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration image -> org.hibernate.type.ImageType@60410cd
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@31add175
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@31add175
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@31add175
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration text -> org.hibernate.type.TextType@51549490
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@432038ec
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5ddcc487
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ddcc487
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@36b4091c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration clob -> org.hibernate.type.ClobType@1efe439d
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1efe439d
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@39ac0c0a
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@39ac0c0a
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3403e2ac
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19c65cdc
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@68df9280
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration object -> org.hibernate.type.ObjectType@62010f5c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62010f5c
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b6ec132
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c44c582
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67d18ed7
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c78d320
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@132e0cc
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7b205dbd
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@106cc338
2021-04-10 12:53:31 BasicTypeRegistry.java DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a67e3c6
2021-04-10 12:53:31 BootstrapContextImpl.java DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7b420819] into BootstrapContext; was [null]
2021-04-10 12:53:31 BootstrapContextImpl.java DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7a1a14a4] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@265adfad]
2021-04-10 12:53:31 BootstrapContextImpl.java DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-04-10 12:53:31 ClassLoaderAccessImpl.java DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-10 12:53:31 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-10 12:53:31 C3P0ConnectionProvider.java INFO HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
2021-04-10 12:53:31 C3P0ConnectionProvider.java INFO HHH10001001: Connection properties: {password=****, user=root}
2021-04-10 12:53:31 C3P0ConnectionProvider.java INFO HHH10001003: Autocommit mode: false
2021-04-10 12:53:31 MLog.java INFO MLog clients using log4j logging.
2021-04-10 12:53:31 MConfig.java DEBUG Reading VM config for path list /com/mchange/v2/log/default-mchange-log.properties, /mchange-commons.properties, /c3p0.properties, hocon:/reference,/application,/c3p0,/, /mchange-log.properties, /
2021-04-10 12:53:31 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 12:53:31 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 12:53:31 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 12:53:31 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 12:53:31 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 12:53:31 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 12:53:31 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 12:53:31 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 12:53:32 C3P0Registry.java INFO Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
2021-04-10 12:53:32 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fn6hgj156xej2|76ba13c,name=1hgf4e9ag1fn6hgj156xej2|76ba13c registered.
2021-04-10 12:53:32 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fn6hgj156xej2|76ba13c,name=1hgf4e9ag1fn6hgj156xej2|76ba13c unregistered, in order to be reregistered after update.
2021-04-10 12:53:32 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fn6hgj156xej2|76ba13c,name=1hgf4e9ag1fn6hgj156xej2|76ba13c registered.
2021-04-10 12:53:32 C3P0ConnectionProvider.java INFO HHH10001007: JDBC isolation level: <unknown>
2021-04-10 12:53:32 AbstractPoolBackedDataSource.java INFO Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@d3409b87 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@fa7f0eb4 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgf4e9ag1fn6hgj156xej2|58bf8650, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@8958f235 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgf4e9ag1fn6hgj156xej2|315f43d5, jdbcUrl -> jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, properties -> {password=******, user=******} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgf4e9ag1fn6hgj156xej2|76ba13c, numHelperThreads -> 3 ]
2021-04-10 12:53:32 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 12:53:32 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 12:53:32 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 12:53:32 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 12:53:32 BasicResourcePool.java DEBUG com.mchange.v2.resourcepool.BasicResourcePool@74cec793 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
2021-04-10 12:53:32 C3P0PooledConnectionPoolManager.java DEBUG Created new pool for auth, username (masked): 'ro******'.
2021-04-10 12:53:32 BasicResourcePool.java DEBUG acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
2021-04-10 12:53:32 BasicResourcePool.java DEBUG awaitAvailable(): [unknown]
2021-04-10 12:53:32 JdbcEnvironmentInitiator.java DEBUG Database ->
       name : MySQL
    version : 8.0.12
      major : 8
      minor : 0
2021-04-10 12:53:32 JdbcEnvironmentInitiator.java DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
2021-04-10 12:53:32 DelegatingBasicLogger.java DEBUG JDBC version : 4.2
2021-04-10 12:53:32 Dialect.java INFO HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2021-04-10 12:53:32 IdentifierHelperBuilder.java DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-04-10 12:53:32 IdentifierHelperBuilder.java DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-04-10 12:53:32 Namespace.java DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-10 12:53:32 TypeConfiguration.java DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@eadb475] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d4d48a6]
2021-04-10 12:53:32 AnnotationBinder.java DEBUG Binding entity from annotated class: top.meethigher.demo01.domain.Customer
2021-04-10 12:53:32 Ejb3Column.java DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-10 12:53:32 EntityBinder.java DEBUG Import with entity name Customer
2021-04-10 12:53:32 EntityBinder.java DEBUG Bind entity top.meethigher.demo01.domain.Customer on table customer
2021-04-10 12:53:32 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_id, insertable=true, updatable=true, unique=false}
2021-04-10 12:53:32 ClassLoaderAccessImpl.java DEBUG Not known whether passed class name [top.meethigher.demo01.domain.Customer] is safe
2021-04-10 12:53:32 ClassLoaderAccessImpl.java DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : top.meethigher.demo01.domain.Customer
2021-04-10 12:53:32 PropertyBinder.java DEBUG MetadataSourceProcessor property custId with lazy=false
2021-04-10 12:53:32 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custId]
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG building SimpleValue for custId
2021-04-10 12:53:32 PropertyBinder.java DEBUG Building property custId
2021-04-10 12:53:32 BinderHelper.java DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cust_id)]), custId, identity, , ...)
2021-04-10 12:53:32 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_address, insertable=true, updatable=true, unique=false}
2021-04-10 12:53:32 PropertyBinder.java DEBUG MetadataSourceProcessor property custAddress with lazy=false
2021-04-10 12:53:32 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custAddress]
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG building SimpleValue for custAddress
2021-04-10 12:53:32 PropertyBinder.java DEBUG Building property custAddress
2021-04-10 12:53:32 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_industry, insertable=true, updatable=true, unique=false}
2021-04-10 12:53:32 PropertyBinder.java DEBUG MetadataSourceProcessor property custIndustry with lazy=false
2021-04-10 12:53:32 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custIndustry]
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG building SimpleValue for custIndustry
2021-04-10 12:53:32 PropertyBinder.java DEBUG Building property custIndustry
2021-04-10 12:53:32 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_level, insertable=true, updatable=true, unique=false}
2021-04-10 12:53:32 PropertyBinder.java DEBUG MetadataSourceProcessor property custLevel with lazy=false
2021-04-10 12:53:32 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custLevel]
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG building SimpleValue for custLevel
2021-04-10 12:53:32 PropertyBinder.java DEBUG Building property custLevel
2021-04-10 12:53:32 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_name, insertable=true, updatable=true, unique=false}
2021-04-10 12:53:32 PropertyBinder.java DEBUG MetadataSourceProcessor property custName with lazy=false
2021-04-10 12:53:32 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custName]
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG building SimpleValue for custName
2021-04-10 12:53:32 PropertyBinder.java DEBUG Building property custName
2021-04-10 12:53:32 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_phone, insertable=true, updatable=true, unique=false}
2021-04-10 12:53:32 PropertyBinder.java DEBUG MetadataSourceProcessor property custPhone with lazy=false
2021-04-10 12:53:32 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custPhone]
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG building SimpleValue for custPhone
2021-04-10 12:53:32 PropertyBinder.java DEBUG Building property custPhone
2021-04-10 12:53:32 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_source, insertable=true, updatable=true, unique=false}
2021-04-10 12:53:32 PropertyBinder.java DEBUG MetadataSourceProcessor property custSource with lazy=false
2021-04-10 12:53:32 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custSource]
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG building SimpleValue for custSource
2021-04-10 12:53:32 PropertyBinder.java DEBUG Building property custSource
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custId
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custAddress
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custIndustry
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custLevel
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custName
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custPhone
2021-04-10 12:53:32 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custSource
2021-04-10 12:53:32 PrimaryKey.java DEBUG Forcing column [cust_id] to be non-null as it is part of the primary key for table [customer]
2021-04-10 12:53:32 SessionFactoryImpl.java DEBUG Building session factory
2021-04-10 12:53:32 Settings.java DEBUG SessionFactory name : null
2021-04-10 12:53:32 Settings.java DEBUG Automatic flush during beforeCompletion(): enabled
2021-04-10 12:53:32 Settings.java DEBUG Automatic session close at end of transaction: disabled
2021-04-10 12:53:32 Settings.java DEBUG Statistics: disabled
2021-04-10 12:53:32 Settings.java DEBUG Deleted entity synthetic identifier rollback: disabled
2021-04-10 12:53:32 Settings.java DEBUG Default entity-mode: pojo
2021-04-10 12:53:32 Settings.java DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-10 12:53:32 Settings.java DEBUG Allow initialization of lazy state outside session : disabled
2021-04-10 12:53:32 Settings.java DEBUG Using BatchFetchStyle : LEGACY
2021-04-10 12:53:32 Settings.java DEBUG Default batch fetch size: -1
2021-04-10 12:53:32 Settings.java DEBUG Maximum outer join fetch depth: 2
2021-04-10 12:53:32 Settings.java DEBUG Default null ordering: NONE
2021-04-10 12:53:32 Settings.java DEBUG Order SQL updates by primary key: disabled
2021-04-10 12:53:32 Settings.java DEBUG Order SQL inserts for batching: disabled
2021-04-10 12:53:32 Settings.java DEBUG multi-tenancy strategy : NONE
2021-04-10 12:53:32 Settings.java DEBUG JTA Track by Thread: enabled
2021-04-10 12:53:32 Settings.java DEBUG Query language substitutions: {}
2021-04-10 12:53:32 Settings.java DEBUG Named query checking : enabled
2021-04-10 12:53:32 Settings.java DEBUG Second-level cache: disabled
2021-04-10 12:53:32 Settings.java DEBUG Second-level query cache: disabled
2021-04-10 12:53:32 Settings.java DEBUG Second-level query cache factory: null
2021-04-10 12:53:32 Settings.java DEBUG Second-level cache region prefix: null
2021-04-10 12:53:32 Settings.java DEBUG Optimize second-level cache for minimal puts: disabled
2021-04-10 12:53:32 Settings.java DEBUG Structured second-level cache entries: disabled
2021-04-10 12:53:32 Settings.java DEBUG Second-level cache direct-reference entries: disabled
2021-04-10 12:53:32 Settings.java DEBUG Automatic eviction of collection cache: disabled
2021-04-10 12:53:32 Settings.java DEBUG JDBC batch size: 15
2021-04-10 12:53:32 Settings.java DEBUG JDBC batch updates for versioned data: enabled
2021-04-10 12:53:32 Settings.java DEBUG Scrollable result sets: enabled
2021-04-10 12:53:32 Settings.java DEBUG Wrap result sets: disabled
2021-04-10 12:53:32 Settings.java DEBUG JDBC3 getGeneratedKeys(): enabled
2021-04-10 12:53:32 Settings.java DEBUG JDBC result set fetch size: null
2021-04-10 12:53:32 Settings.java DEBUG Connection release mode: AFTER_TRANSACTION
2021-04-10 12:53:32 Settings.java DEBUG Generate SQL with comments: disabled
2021-04-10 12:53:32 Settings.java DEBUG JPA compliance - query : disabled
2021-04-10 12:53:32 Settings.java DEBUG JPA compliance - closed-handling : disabled
2021-04-10 12:53:32 Settings.java DEBUG JPA compliance - lists : disabled
2021-04-10 12:53:32 Settings.java DEBUG JPA compliance - transactions : disabled
2021-04-10 12:53:32 SessionFactoryImpl.java DEBUG Session factory constructed with filter configurations : {}
2021-04-10 12:53:32 SessionFactoryImpl.java DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, hibernatef.show_sql=true, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\plugins\junit\lib\junit-rt.jar;D:\Develop\JavaDev\SpringDataJPA-notes\target\test-classes;D:\Develop\JavaDev\SpringDataJPA-notes\target\classes;C:\Users\meethigher\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\meethigher\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.30.Final\hibernate-entitymanager-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\meethigher\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\meethigher\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\meethigher\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\meethigher\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\meethigher\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\meethigher\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\meethigher\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\meethigher\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\meethigher\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\meethigher\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\meethigher\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\meethigher\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\meethigher\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\meethigher\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\meethigher\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-c3p0\5.4.30.Final\hibernate-c3p0-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\meethigher\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\meethigher\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meethigher\.m2\repository\mysql\mysql-connector-java\8.0.12\mysql-connector-java-8.0.12.jar;C:\Users\meethigher\.m2\repository\com\google\protobuf\protobuf-java\2.6.0\protobuf-java-2.6.0.jar, java.vm.vendor=Oracle Corporation, hibernatef.hbm2ddl.auto=update, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-12.0.2\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit4 top.meethigher.demo01.JPATest01,testSave, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\meethigher, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=C:\Program Files\Java\jdk-12.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=meethigher, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=myJpa, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\MEETHI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=D:\Develop\JavaDev\SpringDataJPA-notes, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2bac9ba, java.library.path=C:\Program Files\Java\jdk-12.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\Java\jdk-12.0.2\bin;D:\softTools\python38;D:\softTools\OpenSSL-Win64\bin\;D:\Develop\apache-maven-3.6.3\bin;D:\softTools\python38\Scripts;C:\Users\meethigher\AppData\Local\Microsoft\WindowsApps;C:\Users\meethigher\AppData\Roaming\npm;D:\softTools\Fiddler;C:\Program Files\Java\jdk-12.0.2\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=12.0.2+10, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=56.0}
2021-04-10 12:53:32 JaccIntegrator.java DEBUG Skipping JACC integration as it was not enabled
2021-04-10 12:53:32 SessionFactoryImpl.java DEBUG Instantiated session factory
2021-04-10 12:53:32 TypeConfiguration.java DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@eadb475] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ae372b9]
2021-04-10 12:53:32 ClassLoaderAccessImpl.java DEBUG Not known whether passed class name [top.meethigher.demo01.domain.Customer] is safe
2021-04-10 12:53:32 ClassLoaderAccessImpl.java DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : top.meethigher.demo01.domain.Customer
2021-04-10 12:53:32 AbstractEntityPersister.java DEBUG Static SQL for entity: top.meethigher.demo01.domain.Customer
2021-04-10 12:53:32 AbstractEntityPersister.java DEBUG  Version select: select cust_id from customer where cust_id =?
2021-04-10 12:53:32 AbstractEntityPersister.java DEBUG  Snapshot select: select customer_.cust_id, customer_.cust_address as cust_add2_0_, customer_.cust_industry as cust_ind3_0_, customer_.cust_level as cust_lev4_0_, customer_.cust_name as cust_nam5_0_, customer_.cust_phone as cust_pho6_0_, customer_.cust_source as cust_sou7_0_ from customer customer_ where customer_.cust_id=?
2021-04-10 12:53:32 DelegatingBasicLogger.java DEBUG  Insert 0: insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source, cust_id) values (?, ?, ?, ?, ?, ?, ?)
2021-04-10 12:53:32 DelegatingBasicLogger.java DEBUG  Update 0: update customer set cust_address=?, cust_industry=?, cust_level=?, cust_name=?, cust_phone=?, cust_source=? where cust_id=?
2021-04-10 12:53:32 DelegatingBasicLogger.java DEBUG  Delete 0: delete from customer where cust_id=?
2021-04-10 12:53:32 AbstractEntityPersister.java DEBUG  Identity insert: insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source) values (?, ?, ?, ?, ?, ?)
2021-04-10 12:53:32 QuerySpacesImpl.java DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cd163b]
2021-04-10 12:53:32 MetamodelGraphWalker.java DEBUG Visiting attribute path : custAddress
2021-04-10 12:53:32 MetamodelGraphWalker.java DEBUG Visiting attribute path : custIndustry
2021-04-10 12:53:32 MetamodelGraphWalker.java DEBUG Visiting attribute path : custLevel
2021-04-10 12:53:32 MetamodelGraphWalker.java DEBUG Visiting attribute path : custName
2021-04-10 12:53:32 MetamodelGraphWalker.java DEBUG Visiting attribute path : custPhone
2021-04-10 12:53:32 MetamodelGraphWalker.java DEBUG Visiting attribute path : custSource
2021-04-10 12:53:32 FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java DEBUG Building LoadPlan...
2021-04-10 12:53:32 LoadQueryJoinAndFetchProcessor.java DEBUG processing queryspace <gen:0>
2021-04-10 12:53:32 LoadPlanTreePrinter.java DEBUG LoadPlan(entity=top.meethigher.demo01.domain.Customer)
    - Returns
       - EntityReturnImpl(entity=top.meethigher.demo01.domain.Customer, querySpaceUid=<gen:0>, path=top.meethigher.demo01.domain.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=top.meethigher.demo01.domain.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {cust_id1_0_0_}

2021-04-10 12:53:32 EntityLoader.java DEBUG Static select for entity top.meethigher.demo01.domain.Customer [NONE]: select customer0_.cust_id as cust_id1_0_0_, customer0_.cust_address as cust_add2_0_0_, customer0_.cust_industry as cust_ind3_0_0_, customer0_.cust_level as cust_lev4_0_0_, customer0_.cust_name as cust_nam5_0_0_, customer0_.cust_phone as cust_pho6_0_0_, customer0_.cust_source as cust_sou7_0_0_ from customer customer0_ where customer0_.cust_id=?
2021-04-10 12:53:32 SchemaManagementToolCoordinator.java DEBUG No actions specified; doing nothing
2021-04-10 12:53:32 JtaPlatformInitiator.java DEBUG No JtaPlatform was specified, checking resolver
2021-04-10 12:53:32 JtaPlatformResolverInitiator.java DEBUG No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-10 12:53:32 StandardJtaPlatformResolver.java DEBUG Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-10 12:53:32 JtaPlatformInitiator.java INFO HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-10 12:53:32 NamedQueryRepository.java DEBUG Checking 0 named HQL queries
2021-04-10 12:53:32 NamedQueryRepository.java DEBUG Checking 0 named SQL queries
2021-04-10 12:53:32 SessionFactoryRegistry.java DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56dfab87
2021-04-10 12:53:32 SessionFactoryRegistry.java DEBUG Registering SessionFactory: f6cae36c-f773-4c53-b21a-38a70e53dd61 (<unnamed>)
2021-04-10 12:53:32 SessionFactoryRegistry.java DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-10 12:53:32 StatisticsInitiator.java DEBUG Statistics initialized [enabled=false]
2021-04-10 12:53:32 TransactionImpl.java DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-10 12:53:32 TransactionImpl.java DEBUG begin
2021-04-10 12:53:32 ActionQueue.java DEBUG Executing identity-insert immediately
2021-04-10 12:53:32 SqlStatementLogger.java DEBUG insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source) values (?, ?, ?, ?, ?, ?)
2021-04-10 12:53:33 IdentifierGeneratorHelper.java DEBUG Natively generated identity: 4
2021-04-10 12:53:33 ResourceRegistryStandardImpl.java DEBUG HHH000387: ResultSet's statement was not registered
2021-04-10 12:53:33 TransactionImpl.java DEBUG committing
2021-04-10 12:53:33 AbstractFlushingEventListener.java DEBUG Processing flush-time cascades
2021-04-10 12:53:33 AbstractFlushingEventListener.java DEBUG Dirty checking collections
2021-04-10 12:53:33 AbstractFlushingEventListener.java DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-10 12:53:33 AbstractFlushingEventListener.java DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-10 12:53:33 EntityPrinter.java DEBUG Listing entities:
2021-04-10 12:53:33 EntityPrinter.java DEBUG top.meethigher.demo01.domain.Customer{custSource=保密, custIndustry=蛇人族, custId=4, custAddress=斗破苍穹, custLevel=斗皇强者, custName=美杜莎, custPhone=保密}
2021-04-10 12:53:33 LogicalConnectionManagedImpl.java DEBUG Initiating JDBC connection release from afterTransaction
2021-04-10 12:53:33 LogicalConnectionManagedImpl.java DEBUG Initiating JDBC connection release from afterTransaction
2021-04-10 12:53:33 SessionFactoryImpl.java DEBUG HHH000031: Closing
2021-04-10 12:53:33 TypeConfiguration.java DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5114b7c7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ae372b9]
2021-04-10 12:53:33 AbstractServiceRegistryImpl.java DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-04-10 12:53:33 ActiveManagementCoordinator.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fn6hgj156xej2|76ba13c,name=1hgf4e9ag1fn6hgj156xej2|76ba13c unregistered.
2021-04-10 12:53:33 ActiveManagementCoordinator.java DEBUG C3P0Registry mbean unregistered.
2021-04-10 12:53:33 BasicResourcePool.java DEBUG Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@38e72c1d
2021-04-10 12:53:33 BootstrapServiceRegistryImpl.java DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-04-10 12:53:33 C3P0PooledConnectionPool.java DEBUG Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@38e72c1d
2021-04-10 12:53:33 C3P0PooledConnectionPool.java DEBUG Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@38e72c1d
2021-04-10 12:53:33 BasicResourcePool.java DEBUG Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@38e72c1d
2021-04-10 12:53:33 BasicResourcePool.java DEBUG Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@75c5cc0f
2021-04-10 12:53:33 C3P0PooledConnectionPool.java DEBUG Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@75c5cc0f
2021-04-10 12:53:57 LogHelper.java INFO HHH000204: Processing PersistenceUnitInfo [name: myJpa]
2021-04-10 12:53:58 Version.java INFO HHH000412: Hibernate ORM core version 5.4.30.Final
2021-04-10 12:53:58 JavaReflectionManager.java INFO HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-10 12:53:58 C3P0ConnectionProvider.java INFO HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
2021-04-10 12:53:58 C3P0ConnectionProvider.java INFO HHH10001001: Connection properties: {password=****, user=root}
2021-04-10 12:53:58 C3P0ConnectionProvider.java INFO HHH10001003: Autocommit mode: false
2021-04-10 12:53:58 MLog.java INFO MLog clients using log4j logging.
2021-04-10 12:53:58 C3P0Registry.java INFO Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
2021-04-10 12:53:58 C3P0ConnectionProvider.java INFO HHH10001007: JDBC isolation level: <unknown>
2021-04-10 12:53:58 AbstractPoolBackedDataSource.java INFO Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@aba168b7 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@b1540d29 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgf4e9ag1fn72681hzvxg9|56f6d40b, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@45bfbb2d [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgf4e9ag1fn72681hzvxg9|7f6f61c8, jdbcUrl -> jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, properties -> {password=******, user=******} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgf4e9ag1fn72681hzvxg9|659eef7, numHelperThreads -> 3 ]
2021-04-10 12:53:59 Dialect.java INFO HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2021-04-10 12:53:59 JtaPlatformInitiator.java INFO HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-10 12:54:35 LogHelper.java INFO HHH000204: Processing PersistenceUnitInfo [name: myJpa]
2021-04-10 12:54:35 Version.java INFO HHH000412: Hibernate ORM core version 5.4.30.Final
2021-04-10 12:54:35 JavaReflectionManager.java INFO HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-10 12:54:35 C3P0ConnectionProvider.java INFO HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
2021-04-10 12:54:35 C3P0ConnectionProvider.java INFO HHH10001001: Connection properties: {password=****, user=root}
2021-04-10 12:54:35 C3P0ConnectionProvider.java INFO HHH10001003: Autocommit mode: false
2021-04-10 12:54:35 MLog.java INFO MLog clients using log4j logging.
2021-04-10 12:54:35 C3P0Registry.java INFO Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
2021-04-10 12:54:36 C3P0ConnectionProvider.java INFO HHH10001007: JDBC isolation level: <unknown>
2021-04-10 12:54:36 AbstractPoolBackedDataSource.java INFO Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@7214dde3 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@b94f3d7d [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgf4e9ag1fn7urxqzyt0t|56f6d40b, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@4dbaeb81 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgf4e9ag1fn7urxqzyt0t|7f6f61c8, jdbcUrl -> jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, properties -> {password=******, user=******} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgf4e9ag1fn7urxqzyt0t|659eef7, numHelperThreads -> 3 ]
2021-04-10 12:54:36 Dialect.java INFO HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2021-04-10 12:54:36 JtaPlatformInitiator.java INFO HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-10 12:55:02 HibernatePersistenceProvider.java DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-10 12:55:02 HibernatePersistenceProvider.java DEBUG Located and parsed 1 persistence units; checking each
2021-04-10 12:55:02 HibernatePersistenceProvider.java DEBUG Checking persistence-unit [name=myJpa, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [myJpa]
2021-04-10 12:55:02 ProviderChecker.java DEBUG Persistence-unit [myJpa] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2021-04-10 12:55:02 LogHelper.java DEBUG PersistenceUnitInfo [
	name: myJpa
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Develop/JavaDev/SpringDataJPA-notes/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernatef.show_sql: true
		javax.persistence.jdbc.password: 1050121804
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
		hibernatef.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2021-04-10 12:55:02 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-10 12:55:02 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-10 12:55:02 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-10 12:55:02 Version.java INFO HHH000412: Hibernate ORM core version 5.4.30.Final
2021-04-10 12:55:02 Environment.java DEBUG HHH000206: hibernate.properties not found
2021-04-10 12:55:02 ServiceBinding.java DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-10 12:55:02 RegionFactoryInitiator.java DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-10 12:55:02 RegionFactoryInitiator.java DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-10 12:55:02 JavaReflectionManager.java INFO HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26df6e3a
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52e7a6b2
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@42a15bdc
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration character -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration char -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration int -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@4f74980d
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@4f74980d
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f74980d
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46271dd6
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46271dd6
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6fa34d52
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6fa34d52
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration string -> org.hibernate.type.StringType@6337c201
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@6337c201
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4032d386
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b74ac8
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration url -> org.hibernate.type.UrlType@2b175c00
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b175c00
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@6d026701
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d026701
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7674b62c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7674b62c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@c7045b9
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@c7045b9
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7357a011
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7357a011
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c01cfa1
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c01cfa1
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ce6c6ec
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ce6c6ec
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b45c0e
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b45c0e
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3d57c7
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3d57c7
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration date -> org.hibernate.type.DateType@75d2da2d
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@75d2da2d
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration time -> org.hibernate.type.TimeType@352c1b98
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@352c1b98
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@409c54f
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fcf2fc1
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@479ceda0
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@2d6c53fc
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d6c53fc
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7ceb3185
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ceb3185
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@20f5281c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20f5281c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration class -> org.hibernate.type.ClassType@1bd39d3c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bd39d3c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@455b6df1
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@455b6df1
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41ab013
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@8e50104
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@8e50104
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@8e50104
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@51133c06
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration image -> org.hibernate.type.ImageType@60410cd
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@31add175
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@31add175
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@31add175
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration text -> org.hibernate.type.TextType@51549490
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@432038ec
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5ddcc487
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ddcc487
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@36b4091c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration clob -> org.hibernate.type.ClobType@1efe439d
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1efe439d
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@39ac0c0a
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@39ac0c0a
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3403e2ac
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19c65cdc
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@68df9280
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration object -> org.hibernate.type.ObjectType@62010f5c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62010f5c
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b6ec132
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c44c582
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67d18ed7
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c78d320
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@132e0cc
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7b205dbd
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@106cc338
2021-04-10 12:55:03 BasicTypeRegistry.java DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a67e3c6
2021-04-10 12:55:03 BootstrapContextImpl.java DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7b420819] into BootstrapContext; was [null]
2021-04-10 12:55:03 BootstrapContextImpl.java DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7a1a14a4] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@265adfad]
2021-04-10 12:55:03 BootstrapContextImpl.java DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-04-10 12:55:03 ClassLoaderAccessImpl.java DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-10 12:55:03 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-10 12:55:03 C3P0ConnectionProvider.java INFO HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
2021-04-10 12:55:03 C3P0ConnectionProvider.java INFO HHH10001001: Connection properties: {password=****, user=root}
2021-04-10 12:55:03 C3P0ConnectionProvider.java INFO HHH10001003: Autocommit mode: false
2021-04-10 12:55:03 MLog.java INFO MLog clients using log4j logging.
2021-04-10 12:55:03 MConfig.java DEBUG Reading VM config for path list /com/mchange/v2/log/default-mchange-log.properties, /mchange-commons.properties, /c3p0.properties, hocon:/reference,/application,/c3p0,/, /mchange-log.properties, /
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 12:55:03 C3P0Registry.java INFO Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
2021-04-10 12:55:03 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fn8fw0jhwhbs|76ba13c,name=1hgf4e9ag1fn8fw0jhwhbs|76ba13c registered.
2021-04-10 12:55:03 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fn8fw0jhwhbs|76ba13c,name=1hgf4e9ag1fn8fw0jhwhbs|76ba13c unregistered, in order to be reregistered after update.
2021-04-10 12:55:03 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fn8fw0jhwhbs|76ba13c,name=1hgf4e9ag1fn8fw0jhwhbs|76ba13c registered.
2021-04-10 12:55:03 C3P0ConnectionProvider.java INFO HHH10001007: JDBC isolation level: <unknown>
2021-04-10 12:55:03 AbstractPoolBackedDataSource.java INFO Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@e6c84910 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@57ed124b [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgf4e9ag1fn8fw0jhwhbs|58bf8650, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@e6c6f5cc [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgf4e9ag1fn8fw0jhwhbs|315f43d5, jdbcUrl -> jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, properties -> {password=******, user=******} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgf4e9ag1fn8fw0jhwhbs|76ba13c, numHelperThreads -> 3 ]
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 12:55:03 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 12:55:03 BasicResourcePool.java DEBUG com.mchange.v2.resourcepool.BasicResourcePool@74cec793 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
2021-04-10 12:55:03 C3P0PooledConnectionPoolManager.java DEBUG Created new pool for auth, username (masked): 'ro******'.
2021-04-10 12:55:03 BasicResourcePool.java DEBUG acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
2021-04-10 12:55:03 BasicResourcePool.java DEBUG awaitAvailable(): [unknown]
2021-04-10 12:55:03 JdbcEnvironmentInitiator.java DEBUG Database ->
       name : MySQL
    version : 8.0.12
      major : 8
      minor : 0
2021-04-10 12:55:03 JdbcEnvironmentInitiator.java DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
2021-04-10 12:55:03 DelegatingBasicLogger.java DEBUG JDBC version : 4.2
2021-04-10 12:55:03 Dialect.java INFO HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2021-04-10 12:55:03 IdentifierHelperBuilder.java DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-04-10 12:55:03 IdentifierHelperBuilder.java DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-04-10 12:55:03 Namespace.java DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-10 12:55:03 TypeConfiguration.java DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@eadb475] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d4d48a6]
2021-04-10 12:55:03 AnnotationBinder.java DEBUG Binding entity from annotated class: top.meethigher.demo01.domain.Customer
2021-04-10 12:55:03 Ejb3Column.java DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-10 12:55:03 EntityBinder.java DEBUG Import with entity name Customer
2021-04-10 12:55:03 EntityBinder.java DEBUG Bind entity top.meethigher.demo01.domain.Customer on table customer
2021-04-10 12:55:03 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_id, insertable=true, updatable=true, unique=false}
2021-04-10 12:55:03 ClassLoaderAccessImpl.java DEBUG Not known whether passed class name [top.meethigher.demo01.domain.Customer] is safe
2021-04-10 12:55:03 ClassLoaderAccessImpl.java DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : top.meethigher.demo01.domain.Customer
2021-04-10 12:55:03 PropertyBinder.java DEBUG MetadataSourceProcessor property custId with lazy=false
2021-04-10 12:55:03 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custId]
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG building SimpleValue for custId
2021-04-10 12:55:03 PropertyBinder.java DEBUG Building property custId
2021-04-10 12:55:03 BinderHelper.java DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cust_id)]), custId, identity, , ...)
2021-04-10 12:55:03 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_address, insertable=true, updatable=true, unique=false}
2021-04-10 12:55:03 PropertyBinder.java DEBUG MetadataSourceProcessor property custAddress with lazy=false
2021-04-10 12:55:03 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custAddress]
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG building SimpleValue for custAddress
2021-04-10 12:55:03 PropertyBinder.java DEBUG Building property custAddress
2021-04-10 12:55:03 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_industry, insertable=true, updatable=true, unique=false}
2021-04-10 12:55:03 PropertyBinder.java DEBUG MetadataSourceProcessor property custIndustry with lazy=false
2021-04-10 12:55:03 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custIndustry]
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG building SimpleValue for custIndustry
2021-04-10 12:55:03 PropertyBinder.java DEBUG Building property custIndustry
2021-04-10 12:55:03 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_level, insertable=true, updatable=true, unique=false}
2021-04-10 12:55:03 PropertyBinder.java DEBUG MetadataSourceProcessor property custLevel with lazy=false
2021-04-10 12:55:03 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custLevel]
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG building SimpleValue for custLevel
2021-04-10 12:55:03 PropertyBinder.java DEBUG Building property custLevel
2021-04-10 12:55:03 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_name, insertable=true, updatable=true, unique=false}
2021-04-10 12:55:03 PropertyBinder.java DEBUG MetadataSourceProcessor property custName with lazy=false
2021-04-10 12:55:03 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custName]
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG building SimpleValue for custName
2021-04-10 12:55:03 PropertyBinder.java DEBUG Building property custName
2021-04-10 12:55:03 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_phone, insertable=true, updatable=true, unique=false}
2021-04-10 12:55:03 PropertyBinder.java DEBUG MetadataSourceProcessor property custPhone with lazy=false
2021-04-10 12:55:03 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custPhone]
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG building SimpleValue for custPhone
2021-04-10 12:55:03 PropertyBinder.java DEBUG Building property custPhone
2021-04-10 12:55:03 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_source, insertable=true, updatable=true, unique=false}
2021-04-10 12:55:03 PropertyBinder.java DEBUG MetadataSourceProcessor property custSource with lazy=false
2021-04-10 12:55:03 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custSource]
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG building SimpleValue for custSource
2021-04-10 12:55:03 PropertyBinder.java DEBUG Building property custSource
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custId
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custAddress
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custIndustry
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custLevel
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custName
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custPhone
2021-04-10 12:55:03 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custSource
2021-04-10 12:55:03 PrimaryKey.java DEBUG Forcing column [cust_id] to be non-null as it is part of the primary key for table [customer]
2021-04-10 12:55:03 SessionFactoryImpl.java DEBUG Building session factory
2021-04-10 12:55:03 Settings.java DEBUG SessionFactory name : null
2021-04-10 12:55:03 Settings.java DEBUG Automatic flush during beforeCompletion(): enabled
2021-04-10 12:55:03 Settings.java DEBUG Automatic session close at end of transaction: disabled
2021-04-10 12:55:03 Settings.java DEBUG Statistics: disabled
2021-04-10 12:55:03 Settings.java DEBUG Deleted entity synthetic identifier rollback: disabled
2021-04-10 12:55:03 Settings.java DEBUG Default entity-mode: pojo
2021-04-10 12:55:03 Settings.java DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-10 12:55:03 Settings.java DEBUG Allow initialization of lazy state outside session : disabled
2021-04-10 12:55:03 Settings.java DEBUG Using BatchFetchStyle : LEGACY
2021-04-10 12:55:03 Settings.java DEBUG Default batch fetch size: -1
2021-04-10 12:55:03 Settings.java DEBUG Maximum outer join fetch depth: 2
2021-04-10 12:55:03 Settings.java DEBUG Default null ordering: NONE
2021-04-10 12:55:03 Settings.java DEBUG Order SQL updates by primary key: disabled
2021-04-10 12:55:03 Settings.java DEBUG Order SQL inserts for batching: disabled
2021-04-10 12:55:03 Settings.java DEBUG multi-tenancy strategy : NONE
2021-04-10 12:55:03 Settings.java DEBUG JTA Track by Thread: enabled
2021-04-10 12:55:03 Settings.java DEBUG Query language substitutions: {}
2021-04-10 12:55:03 Settings.java DEBUG Named query checking : enabled
2021-04-10 12:55:03 Settings.java DEBUG Second-level cache: disabled
2021-04-10 12:55:03 Settings.java DEBUG Second-level query cache: disabled
2021-04-10 12:55:03 Settings.java DEBUG Second-level query cache factory: null
2021-04-10 12:55:03 Settings.java DEBUG Second-level cache region prefix: null
2021-04-10 12:55:03 Settings.java DEBUG Optimize second-level cache for minimal puts: disabled
2021-04-10 12:55:03 Settings.java DEBUG Structured second-level cache entries: disabled
2021-04-10 12:55:03 Settings.java DEBUG Second-level cache direct-reference entries: disabled
2021-04-10 12:55:03 Settings.java DEBUG Automatic eviction of collection cache: disabled
2021-04-10 12:55:03 Settings.java DEBUG JDBC batch size: 15
2021-04-10 12:55:03 Settings.java DEBUG JDBC batch updates for versioned data: enabled
2021-04-10 12:55:03 Settings.java DEBUG Scrollable result sets: enabled
2021-04-10 12:55:03 Settings.java DEBUG Wrap result sets: disabled
2021-04-10 12:55:03 Settings.java DEBUG JDBC3 getGeneratedKeys(): enabled
2021-04-10 12:55:03 Settings.java DEBUG JDBC result set fetch size: null
2021-04-10 12:55:03 Settings.java DEBUG Connection release mode: AFTER_TRANSACTION
2021-04-10 12:55:03 Settings.java DEBUG Generate SQL with comments: disabled
2021-04-10 12:55:03 Settings.java DEBUG JPA compliance - query : disabled
2021-04-10 12:55:03 Settings.java DEBUG JPA compliance - closed-handling : disabled
2021-04-10 12:55:03 Settings.java DEBUG JPA compliance - lists : disabled
2021-04-10 12:55:03 Settings.java DEBUG JPA compliance - transactions : disabled
2021-04-10 12:55:03 SessionFactoryImpl.java DEBUG Session factory constructed with filter configurations : {}
2021-04-10 12:55:03 SessionFactoryImpl.java DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, hibernatef.show_sql=true, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\plugins\junit\lib\junit-rt.jar;D:\Develop\JavaDev\SpringDataJPA-notes\target\test-classes;D:\Develop\JavaDev\SpringDataJPA-notes\target\classes;C:\Users\meethigher\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\meethigher\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.30.Final\hibernate-entitymanager-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\meethigher\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\meethigher\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\meethigher\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\meethigher\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\meethigher\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\meethigher\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\meethigher\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\meethigher\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\meethigher\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\meethigher\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\meethigher\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\meethigher\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\meethigher\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\meethigher\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\meethigher\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-c3p0\5.4.30.Final\hibernate-c3p0-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\meethigher\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\meethigher\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meethigher\.m2\repository\mysql\mysql-connector-java\8.0.12\mysql-connector-java-8.0.12.jar;C:\Users\meethigher\.m2\repository\com\google\protobuf\protobuf-java\2.6.0\protobuf-java-2.6.0.jar, java.vm.vendor=Oracle Corporation, hibernatef.hbm2ddl.auto=create, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-12.0.2\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit4 top.meethigher.demo01.JPATest01,testSave, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\meethigher, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=C:\Program Files\Java\jdk-12.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=meethigher, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=myJpa, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\MEETHI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=D:\Develop\JavaDev\SpringDataJPA-notes, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2bac9ba, java.library.path=C:\Program Files\Java\jdk-12.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\Java\jdk-12.0.2\bin;D:\softTools\python38;D:\softTools\OpenSSL-Win64\bin\;D:\Develop\apache-maven-3.6.3\bin;D:\softTools\python38\Scripts;C:\Users\meethigher\AppData\Local\Microsoft\WindowsApps;C:\Users\meethigher\AppData\Roaming\npm;D:\softTools\Fiddler;C:\Program Files\Java\jdk-12.0.2\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=12.0.2+10, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=56.0}
2021-04-10 12:55:03 JaccIntegrator.java DEBUG Skipping JACC integration as it was not enabled
2021-04-10 12:55:03 SessionFactoryImpl.java DEBUG Instantiated session factory
2021-04-10 12:55:03 TypeConfiguration.java DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@eadb475] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ae372b9]
2021-04-10 12:55:03 ClassLoaderAccessImpl.java DEBUG Not known whether passed class name [top.meethigher.demo01.domain.Customer] is safe
2021-04-10 12:55:03 ClassLoaderAccessImpl.java DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : top.meethigher.demo01.domain.Customer
2021-04-10 12:55:04 AbstractEntityPersister.java DEBUG Static SQL for entity: top.meethigher.demo01.domain.Customer
2021-04-10 12:55:04 AbstractEntityPersister.java DEBUG  Version select: select cust_id from customer where cust_id =?
2021-04-10 12:55:04 AbstractEntityPersister.java DEBUG  Snapshot select: select customer_.cust_id, customer_.cust_address as cust_add2_0_, customer_.cust_industry as cust_ind3_0_, customer_.cust_level as cust_lev4_0_, customer_.cust_name as cust_nam5_0_, customer_.cust_phone as cust_pho6_0_, customer_.cust_source as cust_sou7_0_ from customer customer_ where customer_.cust_id=?
2021-04-10 12:55:04 DelegatingBasicLogger.java DEBUG  Insert 0: insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source, cust_id) values (?, ?, ?, ?, ?, ?, ?)
2021-04-10 12:55:04 DelegatingBasicLogger.java DEBUG  Update 0: update customer set cust_address=?, cust_industry=?, cust_level=?, cust_name=?, cust_phone=?, cust_source=? where cust_id=?
2021-04-10 12:55:04 DelegatingBasicLogger.java DEBUG  Delete 0: delete from customer where cust_id=?
2021-04-10 12:55:04 AbstractEntityPersister.java DEBUG  Identity insert: insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source) values (?, ?, ?, ?, ?, ?)
2021-04-10 12:55:04 QuerySpacesImpl.java DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cd163b]
2021-04-10 12:55:04 MetamodelGraphWalker.java DEBUG Visiting attribute path : custAddress
2021-04-10 12:55:04 MetamodelGraphWalker.java DEBUG Visiting attribute path : custIndustry
2021-04-10 12:55:04 MetamodelGraphWalker.java DEBUG Visiting attribute path : custLevel
2021-04-10 12:55:04 MetamodelGraphWalker.java DEBUG Visiting attribute path : custName
2021-04-10 12:55:04 MetamodelGraphWalker.java DEBUG Visiting attribute path : custPhone
2021-04-10 12:55:04 MetamodelGraphWalker.java DEBUG Visiting attribute path : custSource
2021-04-10 12:55:04 FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java DEBUG Building LoadPlan...
2021-04-10 12:55:04 LoadQueryJoinAndFetchProcessor.java DEBUG processing queryspace <gen:0>
2021-04-10 12:55:04 LoadPlanTreePrinter.java DEBUG LoadPlan(entity=top.meethigher.demo01.domain.Customer)
    - Returns
       - EntityReturnImpl(entity=top.meethigher.demo01.domain.Customer, querySpaceUid=<gen:0>, path=top.meethigher.demo01.domain.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=top.meethigher.demo01.domain.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {cust_id1_0_0_}

2021-04-10 12:55:04 EntityLoader.java DEBUG Static select for entity top.meethigher.demo01.domain.Customer [NONE]: select customer0_.cust_id as cust_id1_0_0_, customer0_.cust_address as cust_add2_0_0_, customer0_.cust_industry as cust_ind3_0_0_, customer0_.cust_level as cust_lev4_0_0_, customer0_.cust_name as cust_nam5_0_0_, customer0_.cust_phone as cust_pho6_0_0_, customer0_.cust_source as cust_sou7_0_0_ from customer customer0_ where customer0_.cust_id=?
2021-04-10 12:55:04 SchemaManagementToolCoordinator.java DEBUG No actions specified; doing nothing
2021-04-10 12:55:04 JtaPlatformInitiator.java DEBUG No JtaPlatform was specified, checking resolver
2021-04-10 12:55:04 JtaPlatformResolverInitiator.java DEBUG No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-10 12:55:04 StandardJtaPlatformResolver.java DEBUG Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-10 12:55:04 JtaPlatformInitiator.java INFO HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-10 12:55:04 NamedQueryRepository.java DEBUG Checking 0 named HQL queries
2021-04-10 12:55:04 NamedQueryRepository.java DEBUG Checking 0 named SQL queries
2021-04-10 12:55:04 SessionFactoryRegistry.java DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56dfab87
2021-04-10 12:55:04 SessionFactoryRegistry.java DEBUG Registering SessionFactory: b69cc819-4066-4a73-9018-32cf17f99c00 (<unnamed>)
2021-04-10 12:55:04 SessionFactoryRegistry.java DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-10 12:55:04 StatisticsInitiator.java DEBUG Statistics initialized [enabled=false]
2021-04-10 12:55:04 TransactionImpl.java DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-10 12:55:04 TransactionImpl.java DEBUG begin
2021-04-10 12:55:04 ActionQueue.java DEBUG Executing identity-insert immediately
2021-04-10 12:55:04 SqlStatementLogger.java DEBUG insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source) values (?, ?, ?, ?, ?, ?)
2021-04-10 12:55:04 IdentifierGeneratorHelper.java DEBUG Natively generated identity: 7
2021-04-10 12:55:04 ResourceRegistryStandardImpl.java DEBUG HHH000387: ResultSet's statement was not registered
2021-04-10 12:55:04 TransactionImpl.java DEBUG committing
2021-04-10 12:55:04 AbstractFlushingEventListener.java DEBUG Processing flush-time cascades
2021-04-10 12:55:04 AbstractFlushingEventListener.java DEBUG Dirty checking collections
2021-04-10 12:55:04 AbstractFlushingEventListener.java DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-10 12:55:04 AbstractFlushingEventListener.java DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-10 12:55:04 EntityPrinter.java DEBUG Listing entities:
2021-04-10 12:55:04 EntityPrinter.java DEBUG top.meethigher.demo01.domain.Customer{custSource=保密, custIndustry=蛇人族, custId=7, custAddress=斗破苍穹, custLevel=斗皇强者, custName=美杜莎, custPhone=保密}
2021-04-10 12:55:04 LogicalConnectionManagedImpl.java DEBUG Initiating JDBC connection release from afterTransaction
2021-04-10 12:55:04 LogicalConnectionManagedImpl.java DEBUG Initiating JDBC connection release from afterTransaction
2021-04-10 12:55:04 SessionFactoryImpl.java DEBUG HHH000031: Closing
2021-04-10 12:55:04 TypeConfiguration.java DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5114b7c7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ae372b9]
2021-04-10 12:55:04 AbstractServiceRegistryImpl.java DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-04-10 12:55:04 ActiveManagementCoordinator.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fn8fw0jhwhbs|76ba13c,name=1hgf4e9ag1fn8fw0jhwhbs|76ba13c unregistered.
2021-04-10 12:55:04 ActiveManagementCoordinator.java DEBUG C3P0Registry mbean unregistered.
2021-04-10 12:55:04 BasicResourcePool.java DEBUG Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@23aee0ff
2021-04-10 12:55:04 BootstrapServiceRegistryImpl.java DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-04-10 12:55:04 C3P0PooledConnectionPool.java DEBUG Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@23aee0ff
2021-04-10 12:55:04 C3P0PooledConnectionPool.java DEBUG Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@23aee0ff
2021-04-10 12:55:04 BasicResourcePool.java DEBUG Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@23aee0ff
2021-04-10 12:55:04 BasicResourcePool.java DEBUG Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@53565755
2021-04-10 12:55:04 C3P0PooledConnectionPool.java DEBUG Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@53565755
2021-04-10 12:57:06 HibernatePersistenceProvider.java DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-10 12:57:06 HibernatePersistenceProvider.java DEBUG Located and parsed 1 persistence units; checking each
2021-04-10 12:57:06 HibernatePersistenceProvider.java DEBUG Checking persistence-unit [name=myJpa, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [myJpa]
2021-04-10 12:57:06 ProviderChecker.java DEBUG Persistence-unit [myJpa] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2021-04-10 12:57:06 LogHelper.java DEBUG PersistenceUnitInfo [
	name: myJpa
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Develop/JavaDev/SpringDataJPA-notes/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: 1050121804
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2021-04-10 12:57:06 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-10 12:57:06 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-10 12:57:06 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-10 12:57:06 Version.java INFO HHH000412: Hibernate ORM core version 5.4.30.Final
2021-04-10 12:57:06 Environment.java DEBUG HHH000206: hibernate.properties not found
2021-04-10 12:57:06 ServiceBinding.java DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-10 12:57:06 RegionFactoryInitiator.java DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-10 12:57:06 RegionFactoryInitiator.java DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-10 12:57:06 JavaReflectionManager.java INFO HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26df6e3a
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52e7a6b2
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@42a15bdc
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration character -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration char -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration int -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@4f74980d
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@4f74980d
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f74980d
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46271dd6
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46271dd6
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6fa34d52
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6fa34d52
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration string -> org.hibernate.type.StringType@6337c201
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@6337c201
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4032d386
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b74ac8
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration url -> org.hibernate.type.UrlType@2b175c00
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b175c00
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@6d026701
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d026701
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7674b62c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7674b62c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@c7045b9
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@c7045b9
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7357a011
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7357a011
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c01cfa1
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c01cfa1
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ce6c6ec
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ce6c6ec
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b45c0e
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b45c0e
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3d57c7
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3d57c7
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration date -> org.hibernate.type.DateType@75d2da2d
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@75d2da2d
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration time -> org.hibernate.type.TimeType@352c1b98
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@352c1b98
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@409c54f
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fcf2fc1
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@479ceda0
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@2d6c53fc
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d6c53fc
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7ceb3185
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ceb3185
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@20f5281c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20f5281c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration class -> org.hibernate.type.ClassType@1bd39d3c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bd39d3c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@455b6df1
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@455b6df1
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41ab013
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@8e50104
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@8e50104
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@8e50104
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@51133c06
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration image -> org.hibernate.type.ImageType@60410cd
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@31add175
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@31add175
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@31add175
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration text -> org.hibernate.type.TextType@51549490
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@432038ec
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5ddcc487
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ddcc487
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@36b4091c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration clob -> org.hibernate.type.ClobType@1efe439d
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1efe439d
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@39ac0c0a
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@39ac0c0a
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3403e2ac
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19c65cdc
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@68df9280
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration object -> org.hibernate.type.ObjectType@62010f5c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62010f5c
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b6ec132
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c44c582
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67d18ed7
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c78d320
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@132e0cc
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7b205dbd
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@106cc338
2021-04-10 12:57:07 BasicTypeRegistry.java DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a67e3c6
2021-04-10 12:57:07 BootstrapContextImpl.java DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7b420819] into BootstrapContext; was [null]
2021-04-10 12:57:07 BootstrapContextImpl.java DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7a1a14a4] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@265adfad]
2021-04-10 12:57:07 BootstrapContextImpl.java DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-04-10 12:57:07 ClassLoaderAccessImpl.java DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-10 12:57:07 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-10 12:57:07 C3P0ConnectionProvider.java INFO HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
2021-04-10 12:57:07 C3P0ConnectionProvider.java INFO HHH10001001: Connection properties: {password=****, user=root}
2021-04-10 12:57:07 C3P0ConnectionProvider.java INFO HHH10001003: Autocommit mode: false
2021-04-10 12:57:07 MLog.java INFO MLog clients using log4j logging.
2021-04-10 12:57:07 MConfig.java DEBUG Reading VM config for path list /com/mchange/v2/log/default-mchange-log.properties, /mchange-commons.properties, /c3p0.properties, hocon:/reference,/application,/c3p0,/, /mchange-log.properties, /
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 12:57:07 C3P0Registry.java INFO Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
2021-04-10 12:57:07 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fnb3kiromet2|76ba13c,name=1hgf4e9ag1fnb3kiromet2|76ba13c registered.
2021-04-10 12:57:07 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fnb3kiromet2|76ba13c,name=1hgf4e9ag1fnb3kiromet2|76ba13c unregistered, in order to be reregistered after update.
2021-04-10 12:57:07 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fnb3kiromet2|76ba13c,name=1hgf4e9ag1fnb3kiromet2|76ba13c registered.
2021-04-10 12:57:07 C3P0ConnectionProvider.java INFO HHH10001007: JDBC isolation level: <unknown>
2021-04-10 12:57:07 AbstractPoolBackedDataSource.java INFO Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@38fd76b5 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@4c5d9946 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgf4e9ag1fnb3kiromet2|58bf8650, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@db377cc7 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgf4e9ag1fnb3kiromet2|315f43d5, jdbcUrl -> jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, properties -> {password=******, user=******} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgf4e9ag1fnb3kiromet2|76ba13c, numHelperThreads -> 3 ]
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 12:57:07 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 12:57:07 BasicResourcePool.java DEBUG com.mchange.v2.resourcepool.BasicResourcePool@74cec793 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
2021-04-10 12:57:07 C3P0PooledConnectionPoolManager.java DEBUG Created new pool for auth, username (masked): 'ro******'.
2021-04-10 12:57:07 BasicResourcePool.java DEBUG acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
2021-04-10 12:57:07 BasicResourcePool.java DEBUG awaitAvailable(): [unknown]
2021-04-10 12:57:07 JdbcEnvironmentInitiator.java DEBUG Database ->
       name : MySQL
    version : 8.0.12
      major : 8
      minor : 0
2021-04-10 12:57:07 JdbcEnvironmentInitiator.java DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
2021-04-10 12:57:07 DelegatingBasicLogger.java DEBUG JDBC version : 4.2
2021-04-10 12:57:07 Dialect.java INFO HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2021-04-10 12:57:07 IdentifierHelperBuilder.java DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-04-10 12:57:07 IdentifierHelperBuilder.java DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-04-10 12:57:07 Namespace.java DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-10 12:57:07 TypeConfiguration.java DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@eadb475] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d4d48a6]
2021-04-10 12:57:07 AnnotationBinder.java DEBUG Binding entity from annotated class: top.meethigher.demo01.domain.Customer
2021-04-10 12:57:07 Ejb3Column.java DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-10 12:57:07 EntityBinder.java DEBUG Import with entity name Customer
2021-04-10 12:57:07 EntityBinder.java DEBUG Bind entity top.meethigher.demo01.domain.Customer on table customer
2021-04-10 12:57:07 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_id, insertable=true, updatable=true, unique=false}
2021-04-10 12:57:07 ClassLoaderAccessImpl.java DEBUG Not known whether passed class name [top.meethigher.demo01.domain.Customer] is safe
2021-04-10 12:57:07 ClassLoaderAccessImpl.java DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : top.meethigher.demo01.domain.Customer
2021-04-10 12:57:07 PropertyBinder.java DEBUG MetadataSourceProcessor property custId with lazy=false
2021-04-10 12:57:07 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custId]
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG building SimpleValue for custId
2021-04-10 12:57:07 PropertyBinder.java DEBUG Building property custId
2021-04-10 12:57:07 BinderHelper.java DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cust_id)]), custId, identity, , ...)
2021-04-10 12:57:07 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_address, insertable=true, updatable=true, unique=false}
2021-04-10 12:57:07 PropertyBinder.java DEBUG MetadataSourceProcessor property custAddress with lazy=false
2021-04-10 12:57:07 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custAddress]
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG building SimpleValue for custAddress
2021-04-10 12:57:07 PropertyBinder.java DEBUG Building property custAddress
2021-04-10 12:57:07 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_industry, insertable=true, updatable=true, unique=false}
2021-04-10 12:57:07 PropertyBinder.java DEBUG MetadataSourceProcessor property custIndustry with lazy=false
2021-04-10 12:57:07 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custIndustry]
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG building SimpleValue for custIndustry
2021-04-10 12:57:07 PropertyBinder.java DEBUG Building property custIndustry
2021-04-10 12:57:07 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_level, insertable=true, updatable=true, unique=false}
2021-04-10 12:57:07 PropertyBinder.java DEBUG MetadataSourceProcessor property custLevel with lazy=false
2021-04-10 12:57:07 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custLevel]
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG building SimpleValue for custLevel
2021-04-10 12:57:07 PropertyBinder.java DEBUG Building property custLevel
2021-04-10 12:57:07 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_name, insertable=true, updatable=true, unique=false}
2021-04-10 12:57:07 PropertyBinder.java DEBUG MetadataSourceProcessor property custName with lazy=false
2021-04-10 12:57:07 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custName]
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG building SimpleValue for custName
2021-04-10 12:57:07 PropertyBinder.java DEBUG Building property custName
2021-04-10 12:57:07 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_phone, insertable=true, updatable=true, unique=false}
2021-04-10 12:57:07 PropertyBinder.java DEBUG MetadataSourceProcessor property custPhone with lazy=false
2021-04-10 12:57:07 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custPhone]
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG building SimpleValue for custPhone
2021-04-10 12:57:07 PropertyBinder.java DEBUG Building property custPhone
2021-04-10 12:57:07 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_source, insertable=true, updatable=true, unique=false}
2021-04-10 12:57:07 PropertyBinder.java DEBUG MetadataSourceProcessor property custSource with lazy=false
2021-04-10 12:57:07 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custSource]
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG building SimpleValue for custSource
2021-04-10 12:57:07 PropertyBinder.java DEBUG Building property custSource
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custId
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custAddress
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custIndustry
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custLevel
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custName
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custPhone
2021-04-10 12:57:07 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custSource
2021-04-10 12:57:07 PrimaryKey.java DEBUG Forcing column [cust_id] to be non-null as it is part of the primary key for table [customer]
2021-04-10 12:57:07 SessionFactoryImpl.java DEBUG Building session factory
2021-04-10 12:57:07 Settings.java DEBUG SessionFactory name : null
2021-04-10 12:57:07 Settings.java DEBUG Automatic flush during beforeCompletion(): enabled
2021-04-10 12:57:07 Settings.java DEBUG Automatic session close at end of transaction: disabled
2021-04-10 12:57:07 Settings.java DEBUG Statistics: disabled
2021-04-10 12:57:07 Settings.java DEBUG Deleted entity synthetic identifier rollback: disabled
2021-04-10 12:57:07 Settings.java DEBUG Default entity-mode: pojo
2021-04-10 12:57:07 Settings.java DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-10 12:57:07 Settings.java DEBUG Allow initialization of lazy state outside session : disabled
2021-04-10 12:57:07 Settings.java DEBUG Using BatchFetchStyle : LEGACY
2021-04-10 12:57:07 Settings.java DEBUG Default batch fetch size: -1
2021-04-10 12:57:07 Settings.java DEBUG Maximum outer join fetch depth: 2
2021-04-10 12:57:07 Settings.java DEBUG Default null ordering: NONE
2021-04-10 12:57:07 Settings.java DEBUG Order SQL updates by primary key: disabled
2021-04-10 12:57:07 Settings.java DEBUG Order SQL inserts for batching: disabled
2021-04-10 12:57:07 Settings.java DEBUG multi-tenancy strategy : NONE
2021-04-10 12:57:07 Settings.java DEBUG JTA Track by Thread: enabled
2021-04-10 12:57:07 Settings.java DEBUG Query language substitutions: {}
2021-04-10 12:57:07 Settings.java DEBUG Named query checking : enabled
2021-04-10 12:57:07 Settings.java DEBUG Second-level cache: disabled
2021-04-10 12:57:07 Settings.java DEBUG Second-level query cache: disabled
2021-04-10 12:57:07 Settings.java DEBUG Second-level query cache factory: null
2021-04-10 12:57:07 Settings.java DEBUG Second-level cache region prefix: null
2021-04-10 12:57:07 Settings.java DEBUG Optimize second-level cache for minimal puts: disabled
2021-04-10 12:57:07 Settings.java DEBUG Structured second-level cache entries: disabled
2021-04-10 12:57:07 Settings.java DEBUG Second-level cache direct-reference entries: disabled
2021-04-10 12:57:07 Settings.java DEBUG Automatic eviction of collection cache: disabled
2021-04-10 12:57:07 Settings.java DEBUG JDBC batch size: 15
2021-04-10 12:57:07 Settings.java DEBUG JDBC batch updates for versioned data: enabled
2021-04-10 12:57:07 Settings.java DEBUG Scrollable result sets: enabled
2021-04-10 12:57:07 Settings.java DEBUG Wrap result sets: disabled
2021-04-10 12:57:07 Settings.java DEBUG JDBC3 getGeneratedKeys(): enabled
2021-04-10 12:57:07 Settings.java DEBUG JDBC result set fetch size: null
2021-04-10 12:57:07 Settings.java DEBUG Connection release mode: AFTER_TRANSACTION
2021-04-10 12:57:07 Settings.java DEBUG Generate SQL with comments: disabled
2021-04-10 12:57:07 Settings.java DEBUG JPA compliance - query : disabled
2021-04-10 12:57:07 Settings.java DEBUG JPA compliance - closed-handling : disabled
2021-04-10 12:57:07 Settings.java DEBUG JPA compliance - lists : disabled
2021-04-10 12:57:07 Settings.java DEBUG JPA compliance - transactions : disabled
2021-04-10 12:57:07 SessionFactoryImpl.java DEBUG Session factory constructed with filter configurations : {}
2021-04-10 12:57:07 SessionFactoryImpl.java DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\plugins\junit\lib\junit-rt.jar;D:\Develop\JavaDev\SpringDataJPA-notes\target\test-classes;D:\Develop\JavaDev\SpringDataJPA-notes\target\classes;C:\Users\meethigher\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\meethigher\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.30.Final\hibernate-entitymanager-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\meethigher\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\meethigher\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\meethigher\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\meethigher\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\meethigher\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\meethigher\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\meethigher\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\meethigher\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\meethigher\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\meethigher\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\meethigher\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\meethigher\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\meethigher\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\meethigher\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\meethigher\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-c3p0\5.4.30.Final\hibernate-c3p0-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\meethigher\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\meethigher\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meethigher\.m2\repository\mysql\mysql-connector-java\8.0.12\mysql-connector-java-8.0.12.jar;C:\Users\meethigher\.m2\repository\com\google\protobuf\protobuf-java\2.6.0\protobuf-java-2.6.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-12.0.2\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit4 top.meethigher.demo01.JPATest01,testSave, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\meethigher, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=C:\Program Files\Java\jdk-12.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=meethigher, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=myJpa, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\MEETHI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=D:\Develop\JavaDev\SpringDataJPA-notes, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2bac9ba, java.library.path=C:\Program Files\Java\jdk-12.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\Java\jdk-12.0.2\bin;D:\softTools\python38;D:\softTools\OpenSSL-Win64\bin\;D:\Develop\apache-maven-3.6.3\bin;D:\softTools\python38\Scripts;C:\Users\meethigher\AppData\Local\Microsoft\WindowsApps;C:\Users\meethigher\AppData\Roaming\npm;D:\softTools\Fiddler;C:\Program Files\Java\jdk-12.0.2\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=12.0.2+10, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=56.0}
2021-04-10 12:57:07 JaccIntegrator.java DEBUG Skipping JACC integration as it was not enabled
2021-04-10 12:57:07 SessionFactoryImpl.java DEBUG Instantiated session factory
2021-04-10 12:57:07 TypeConfiguration.java DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@eadb475] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ae372b9]
2021-04-10 12:57:07 ClassLoaderAccessImpl.java DEBUG Not known whether passed class name [top.meethigher.demo01.domain.Customer] is safe
2021-04-10 12:57:07 ClassLoaderAccessImpl.java DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : top.meethigher.demo01.domain.Customer
2021-04-10 12:57:08 AbstractEntityPersister.java DEBUG Static SQL for entity: top.meethigher.demo01.domain.Customer
2021-04-10 12:57:08 AbstractEntityPersister.java DEBUG  Version select: select cust_id from customer where cust_id =?
2021-04-10 12:57:08 AbstractEntityPersister.java DEBUG  Snapshot select: select customer_.cust_id, customer_.cust_address as cust_add2_0_, customer_.cust_industry as cust_ind3_0_, customer_.cust_level as cust_lev4_0_, customer_.cust_name as cust_nam5_0_, customer_.cust_phone as cust_pho6_0_, customer_.cust_source as cust_sou7_0_ from customer customer_ where customer_.cust_id=?
2021-04-10 12:57:08 DelegatingBasicLogger.java DEBUG  Insert 0: insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source, cust_id) values (?, ?, ?, ?, ?, ?, ?)
2021-04-10 12:57:08 DelegatingBasicLogger.java DEBUG  Update 0: update customer set cust_address=?, cust_industry=?, cust_level=?, cust_name=?, cust_phone=?, cust_source=? where cust_id=?
2021-04-10 12:57:08 DelegatingBasicLogger.java DEBUG  Delete 0: delete from customer where cust_id=?
2021-04-10 12:57:08 AbstractEntityPersister.java DEBUG  Identity insert: insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source) values (?, ?, ?, ?, ?, ?)
2021-04-10 12:57:08 QuerySpacesImpl.java DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cd163b]
2021-04-10 12:57:08 MetamodelGraphWalker.java DEBUG Visiting attribute path : custAddress
2021-04-10 12:57:08 MetamodelGraphWalker.java DEBUG Visiting attribute path : custIndustry
2021-04-10 12:57:08 MetamodelGraphWalker.java DEBUG Visiting attribute path : custLevel
2021-04-10 12:57:08 MetamodelGraphWalker.java DEBUG Visiting attribute path : custName
2021-04-10 12:57:08 MetamodelGraphWalker.java DEBUG Visiting attribute path : custPhone
2021-04-10 12:57:08 MetamodelGraphWalker.java DEBUG Visiting attribute path : custSource
2021-04-10 12:57:08 FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java DEBUG Building LoadPlan...
2021-04-10 12:57:08 LoadQueryJoinAndFetchProcessor.java DEBUG processing queryspace <gen:0>
2021-04-10 12:57:08 LoadPlanTreePrinter.java DEBUG LoadPlan(entity=top.meethigher.demo01.domain.Customer)
    - Returns
       - EntityReturnImpl(entity=top.meethigher.demo01.domain.Customer, querySpaceUid=<gen:0>, path=top.meethigher.demo01.domain.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=top.meethigher.demo01.domain.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {cust_id1_0_0_}

2021-04-10 12:57:08 EntityLoader.java DEBUG Static select for entity top.meethigher.demo01.domain.Customer [NONE]: select customer0_.cust_id as cust_id1_0_0_, customer0_.cust_address as cust_add2_0_0_, customer0_.cust_industry as cust_ind3_0_0_, customer0_.cust_level as cust_lev4_0_0_, customer0_.cust_name as cust_nam5_0_0_, customer0_.cust_phone as cust_pho6_0_0_, customer0_.cust_source as cust_sou7_0_0_ from customer customer0_ where customer0_.cust_id=?
2021-04-10 12:57:08 SqlStatementLogger.java DEBUG drop table if exists customer
2021-04-10 12:57:08 DdlTransactionIsolatorNonJtaImpl.java INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3f0d6038] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-10 12:57:08 SqlStatementLogger.java DEBUG create table customer (cust_id bigint not null auto_increment, cust_address varchar(255), cust_industry varchar(255), cust_level varchar(255), cust_name varchar(255), cust_phone varchar(255), cust_source varchar(255), primary key (cust_id)) engine=InnoDB
2021-04-10 12:57:08 DdlTransactionIsolatorNonJtaImpl.java INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3bd2af5b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-10 12:57:08 JtaPlatformInitiator.java DEBUG No JtaPlatform was specified, checking resolver
2021-04-10 12:57:08 JtaPlatformResolverInitiator.java DEBUG No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-10 12:57:08 StandardJtaPlatformResolver.java DEBUG Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-10 12:57:08 JtaPlatformInitiator.java INFO HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-10 12:57:08 NamedQueryRepository.java DEBUG Checking 0 named HQL queries
2021-04-10 12:57:08 NamedQueryRepository.java DEBUG Checking 0 named SQL queries
2021-04-10 12:57:08 SessionFactoryRegistry.java DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@363c4251
2021-04-10 12:57:08 SessionFactoryRegistry.java DEBUG Registering SessionFactory: fcd35b1a-c7cf-4bb5-ae38-dbf736d05651 (<unnamed>)
2021-04-10 12:57:08 SessionFactoryRegistry.java DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-10 12:57:08 StatisticsInitiator.java DEBUG Statistics initialized [enabled=false]
2021-04-10 12:57:08 TransactionImpl.java DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-10 12:57:08 TransactionImpl.java DEBUG begin
2021-04-10 12:57:08 ActionQueue.java DEBUG Executing identity-insert immediately
2021-04-10 12:57:08 SqlStatementLogger.java DEBUG insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source) values (?, ?, ?, ?, ?, ?)
2021-04-10 12:57:08 IdentifierGeneratorHelper.java DEBUG Natively generated identity: 1
2021-04-10 12:57:08 ResourceRegistryStandardImpl.java DEBUG HHH000387: ResultSet's statement was not registered
2021-04-10 12:57:08 TransactionImpl.java DEBUG committing
2021-04-10 12:57:08 AbstractFlushingEventListener.java DEBUG Processing flush-time cascades
2021-04-10 12:57:08 AbstractFlushingEventListener.java DEBUG Dirty checking collections
2021-04-10 12:57:08 AbstractFlushingEventListener.java DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-10 12:57:08 AbstractFlushingEventListener.java DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-10 12:57:08 EntityPrinter.java DEBUG Listing entities:
2021-04-10 12:57:08 EntityPrinter.java DEBUG top.meethigher.demo01.domain.Customer{custSource=保密, custIndustry=蛇人族, custId=1, custAddress=斗破苍穹, custLevel=斗皇强者, custName=美杜莎, custPhone=保密}
2021-04-10 12:57:08 LogicalConnectionManagedImpl.java DEBUG Initiating JDBC connection release from afterTransaction
2021-04-10 12:57:08 LogicalConnectionManagedImpl.java DEBUG Initiating JDBC connection release from afterTransaction
2021-04-10 12:57:08 SessionFactoryImpl.java DEBUG HHH000031: Closing
2021-04-10 12:57:08 TypeConfiguration.java DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7b32b129] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ae372b9]
2021-04-10 12:57:08 AbstractServiceRegistryImpl.java DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-04-10 12:57:08 ActiveManagementCoordinator.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1fnb3kiromet2|76ba13c,name=1hgf4e9ag1fnb3kiromet2|76ba13c unregistered.
2021-04-10 12:57:08 ActiveManagementCoordinator.java DEBUG C3P0Registry mbean unregistered.
2021-04-10 12:57:08 BasicResourcePool.java DEBUG Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@6c98b078
2021-04-10 12:57:08 BootstrapServiceRegistryImpl.java DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-04-10 12:57:08 C3P0PooledConnectionPool.java DEBUG Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@6c98b078
2021-04-10 12:57:08 C3P0PooledConnectionPool.java DEBUG Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@6c98b078
2021-04-10 12:57:08 BasicResourcePool.java DEBUG Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@6c98b078
2021-04-10 12:57:08 BasicResourcePool.java DEBUG Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@19aa6212
2021-04-10 12:57:08 C3P0PooledConnectionPool.java DEBUG Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@19aa6212
2021-04-10 15:01:00 HibernatePersistenceProvider.java DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-10 15:01:00 HibernatePersistenceProvider.java DEBUG Located and parsed 1 persistence units; checking each
2021-04-10 15:01:00 HibernatePersistenceProvider.java DEBUG Checking persistence-unit [name=myJpa, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [myJpa]
2021-04-10 15:01:00 ProviderChecker.java DEBUG Persistence-unit [myJpa] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2021-04-10 15:01:00 LogHelper.java DEBUG PersistenceUnitInfo [
	name: myJpa
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Develop/JavaDev/SpringDataJPA-notes/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: 1050121804
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2021-04-10 15:01:00 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-10 15:01:00 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-10 15:01:00 IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-10 15:01:00 Version.java INFO HHH000412: Hibernate ORM core version 5.4.30.Final
2021-04-10 15:01:00 Environment.java DEBUG HHH000206: hibernate.properties not found
2021-04-10 15:01:01 ServiceBinding.java DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-10 15:01:01 RegionFactoryInitiator.java DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-10 15:01:01 RegionFactoryInitiator.java DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-10 15:01:01 JavaReflectionManager.java INFO HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b79fd76
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26df6e3a
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52e7a6b2
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@42a15bdc
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@704deff2
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration character -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration char -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a307a8c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fc79729
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration int -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57c03d88
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@4f74980d
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@4f74980d
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f74980d
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68f1b17f
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275bf9b3
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46271dd6
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46271dd6
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6fa34d52
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6fa34d52
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration string -> org.hibernate.type.StringType@6337c201
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@6337c201
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4032d386
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b74ac8
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration url -> org.hibernate.type.UrlType@2b175c00
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b175c00
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@6d026701
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d026701
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7674b62c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7674b62c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@c7045b9
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@c7045b9
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7357a011
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7357a011
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c01cfa1
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c01cfa1
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ce6c6ec
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ce6c6ec
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b45c0e
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b45c0e
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3d57c7
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3d57c7
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration date -> org.hibernate.type.DateType@75d2da2d
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@75d2da2d
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration time -> org.hibernate.type.TimeType@352c1b98
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@352c1b98
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@14f9390f
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@409c54f
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b8b43c7
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fcf2fc1
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@479ceda0
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@2d6c53fc
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d6c53fc
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7ceb3185
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ceb3185
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@20f5281c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20f5281c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration class -> org.hibernate.type.ClassType@1bd39d3c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bd39d3c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@455b6df1
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@455b6df1
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41ab013
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@8e50104
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@8e50104
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@8e50104
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@20ca951f
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@51133c06
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration image -> org.hibernate.type.ImageType@60410cd
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@31add175
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@31add175
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@31add175
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@345f69f3
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration text -> org.hibernate.type.TextType@51549490
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@432038ec
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5ddcc487
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ddcc487
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@36b4091c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration clob -> org.hibernate.type.ClobType@1efe439d
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1efe439d
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@39ac0c0a
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@39ac0c0a
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3403e2ac
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19c65cdc
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@68df9280
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration object -> org.hibernate.type.ObjectType@62010f5c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62010f5c
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b6ec132
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c44c582
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67d18ed7
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c78d320
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@132e0cc
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7b205dbd
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@106cc338
2021-04-10 15:01:01 BasicTypeRegistry.java DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a67e3c6
2021-04-10 15:01:01 BootstrapContextImpl.java DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7b420819] into BootstrapContext; was [null]
2021-04-10 15:01:01 BootstrapContextImpl.java DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7a1a14a4] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@265adfad]
2021-04-10 15:01:01 BootstrapContextImpl.java DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-04-10 15:01:01 ClassLoaderAccessImpl.java DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-10 15:01:01 DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-10 15:01:01 C3P0ConnectionProvider.java INFO HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
2021-04-10 15:01:01 C3P0ConnectionProvider.java INFO HHH10001001: Connection properties: {password=****, user=root}
2021-04-10 15:01:01 C3P0ConnectionProvider.java INFO HHH10001003: Autocommit mode: false
2021-04-10 15:01:01 MLog.java INFO MLog clients using log4j logging.
2021-04-10 15:01:01 MConfig.java DEBUG Reading VM config for path list /com/mchange/v2/log/default-mchange-log.properties, /mchange-commons.properties, /c3p0.properties, hocon:/reference,/application,/c3p0,/, /mchange-log.properties, /
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 15:01:01 C3P0Registry.java INFO Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
2021-04-10 15:01:01 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1frqg3hkxlaf4|76ba13c,name=1hgf4e9ag1frqg3hkxlaf4|76ba13c registered.
2021-04-10 15:01:01 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1frqg3hkxlaf4|76ba13c,name=1hgf4e9ag1frqg3hkxlaf4|76ba13c unregistered, in order to be reregistered after update.
2021-04-10 15:01:01 DynamicPooledDataSourceManagerMBean.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1frqg3hkxlaf4|76ba13c,name=1hgf4e9ag1frqg3hkxlaf4|76ba13c registered.
2021-04-10 15:01:01 C3P0ConnectionProvider.java INFO HHH10001007: JDBC isolation level: <unknown>
2021-04-10 15:01:01 AbstractPoolBackedDataSource.java INFO Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@263f9598 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@75f56c3 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgf4e9ag1frqg3hkxlaf4|58bf8650, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@96393a44 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgf4e9ag1frqg3hkxlaf4|315f43d5, jdbcUrl -> jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, properties -> {password=******, user=******} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgf4e9ag1frqg3hkxlaf4|76ba13c, numHelperThreads -> 3 ]
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
2021-04-10 15:01:01 MConfig.java DEBUG The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
2021-04-10 15:01:01 BasicResourcePool.java DEBUG com.mchange.v2.resourcepool.BasicResourcePool@74cec793 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
2021-04-10 15:01:01 C3P0PooledConnectionPoolManager.java DEBUG Created new pool for auth, username (masked): 'ro******'.
2021-04-10 15:01:01 BasicResourcePool.java DEBUG acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
2021-04-10 15:01:01 BasicResourcePool.java DEBUG awaitAvailable(): [unknown]
2021-04-10 15:01:02 JdbcEnvironmentInitiator.java DEBUG Database ->
       name : MySQL
    version : 8.0.12
      major : 8
      minor : 0
2021-04-10 15:01:02 JdbcEnvironmentInitiator.java DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.12 (Revision: 24766725dc6e017025532146d94c6e6c488fb8f1)
      major : 8
      minor : 0
2021-04-10 15:01:02 DelegatingBasicLogger.java DEBUG JDBC version : 4.2
2021-04-10 15:01:02 Dialect.java INFO HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2021-04-10 15:01:02 IdentifierHelperBuilder.java DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-04-10 15:01:02 IdentifierHelperBuilder.java DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-04-10 15:01:02 Namespace.java DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-10 15:01:02 TypeConfiguration.java DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@eadb475] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d4d48a6]
2021-04-10 15:01:02 AnnotationBinder.java DEBUG Binding entity from annotated class: top.meethigher.demo01.domain.Customer
2021-04-10 15:01:02 Ejb3Column.java DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-10 15:01:02 EntityBinder.java DEBUG Import with entity name Customer
2021-04-10 15:01:02 EntityBinder.java DEBUG Bind entity top.meethigher.demo01.domain.Customer on table customer
2021-04-10 15:01:02 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_id, insertable=true, updatable=true, unique=false}
2021-04-10 15:01:02 ClassLoaderAccessImpl.java DEBUG Not known whether passed class name [top.meethigher.demo01.domain.Customer] is safe
2021-04-10 15:01:02 ClassLoaderAccessImpl.java DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : top.meethigher.demo01.domain.Customer
2021-04-10 15:01:02 PropertyBinder.java DEBUG MetadataSourceProcessor property custId with lazy=false
2021-04-10 15:01:02 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custId]
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG building SimpleValue for custId
2021-04-10 15:01:02 PropertyBinder.java DEBUG Building property custId
2021-04-10 15:01:02 BinderHelper.java DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cust_id)]), custId, identity, , ...)
2021-04-10 15:01:02 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_address, insertable=true, updatable=true, unique=false}
2021-04-10 15:01:02 PropertyBinder.java DEBUG MetadataSourceProcessor property custAddress with lazy=false
2021-04-10 15:01:02 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custAddress]
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG building SimpleValue for custAddress
2021-04-10 15:01:02 PropertyBinder.java DEBUG Building property custAddress
2021-04-10 15:01:02 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_industry, insertable=true, updatable=true, unique=false}
2021-04-10 15:01:02 PropertyBinder.java DEBUG MetadataSourceProcessor property custIndustry with lazy=false
2021-04-10 15:01:02 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custIndustry]
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG building SimpleValue for custIndustry
2021-04-10 15:01:02 PropertyBinder.java DEBUG Building property custIndustry
2021-04-10 15:01:02 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_level, insertable=true, updatable=true, unique=false}
2021-04-10 15:01:02 PropertyBinder.java DEBUG MetadataSourceProcessor property custLevel with lazy=false
2021-04-10 15:01:02 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custLevel]
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG building SimpleValue for custLevel
2021-04-10 15:01:02 PropertyBinder.java DEBUG Building property custLevel
2021-04-10 15:01:02 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_name, insertable=true, updatable=true, unique=false}
2021-04-10 15:01:02 PropertyBinder.java DEBUG MetadataSourceProcessor property custName with lazy=false
2021-04-10 15:01:02 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custName]
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG building SimpleValue for custName
2021-04-10 15:01:02 PropertyBinder.java DEBUG Building property custName
2021-04-10 15:01:02 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_phone, insertable=true, updatable=true, unique=false}
2021-04-10 15:01:02 PropertyBinder.java DEBUG MetadataSourceProcessor property custPhone with lazy=false
2021-04-10 15:01:02 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custPhone]
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG building SimpleValue for custPhone
2021-04-10 15:01:02 PropertyBinder.java DEBUG Building property custPhone
2021-04-10 15:01:02 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_source, insertable=true, updatable=true, unique=false}
2021-04-10 15:01:02 PropertyBinder.java DEBUG MetadataSourceProcessor property custSource with lazy=false
2021-04-10 15:01:02 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:custSource]
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG building SimpleValue for custSource
2021-04-10 15:01:02 PropertyBinder.java DEBUG Building property custSource
2021-04-10 15:01:02 Ejb3Column.java DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=hh, insertable=true, updatable=true, unique=false}
2021-04-10 15:01:02 PropertyBinder.java DEBUG MetadataSourceProcessor property hh with lazy=false
2021-04-10 15:01:02 AbstractPropertyHolder.java DEBUG Attempting to locate auto-apply AttributeConverter for property [top.meethigher.demo01.domain.Customer:hh]
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG building SimpleValue for hh
2021-04-10 15:01:02 PropertyBinder.java DEBUG Building property hh
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custId
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custAddress
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custIndustry
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custLevel
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custName
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custPhone
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG Starting fillSimpleValue for custSource
2021-04-10 15:01:02 SimpleValueBinder.java DEBUG Starting fillSimpleValue for hh
2021-04-10 15:01:02 PrimaryKey.java DEBUG Forcing column [cust_id] to be non-null as it is part of the primary key for table [customer]
2021-04-10 15:01:02 SessionFactoryImpl.java DEBUG Building session factory
2021-04-10 15:01:02 Settings.java DEBUG SessionFactory name : null
2021-04-10 15:01:02 Settings.java DEBUG Automatic flush during beforeCompletion(): enabled
2021-04-10 15:01:02 Settings.java DEBUG Automatic session close at end of transaction: disabled
2021-04-10 15:01:02 Settings.java DEBUG Statistics: disabled
2021-04-10 15:01:02 Settings.java DEBUG Deleted entity synthetic identifier rollback: disabled
2021-04-10 15:01:02 Settings.java DEBUG Default entity-mode: pojo
2021-04-10 15:01:02 Settings.java DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-10 15:01:02 Settings.java DEBUG Allow initialization of lazy state outside session : disabled
2021-04-10 15:01:02 Settings.java DEBUG Using BatchFetchStyle : LEGACY
2021-04-10 15:01:02 Settings.java DEBUG Default batch fetch size: -1
2021-04-10 15:01:02 Settings.java DEBUG Maximum outer join fetch depth: 2
2021-04-10 15:01:02 Settings.java DEBUG Default null ordering: NONE
2021-04-10 15:01:02 Settings.java DEBUG Order SQL updates by primary key: disabled
2021-04-10 15:01:02 Settings.java DEBUG Order SQL inserts for batching: disabled
2021-04-10 15:01:02 Settings.java DEBUG multi-tenancy strategy : NONE
2021-04-10 15:01:02 Settings.java DEBUG JTA Track by Thread: enabled
2021-04-10 15:01:02 Settings.java DEBUG Query language substitutions: {}
2021-04-10 15:01:02 Settings.java DEBUG Named query checking : enabled
2021-04-10 15:01:02 Settings.java DEBUG Second-level cache: disabled
2021-04-10 15:01:02 Settings.java DEBUG Second-level query cache: disabled
2021-04-10 15:01:02 Settings.java DEBUG Second-level query cache factory: null
2021-04-10 15:01:02 Settings.java DEBUG Second-level cache region prefix: null
2021-04-10 15:01:02 Settings.java DEBUG Optimize second-level cache for minimal puts: disabled
2021-04-10 15:01:02 Settings.java DEBUG Structured second-level cache entries: disabled
2021-04-10 15:01:02 Settings.java DEBUG Second-level cache direct-reference entries: disabled
2021-04-10 15:01:02 Settings.java DEBUG Automatic eviction of collection cache: disabled
2021-04-10 15:01:02 Settings.java DEBUG JDBC batch size: 15
2021-04-10 15:01:02 Settings.java DEBUG JDBC batch updates for versioned data: enabled
2021-04-10 15:01:02 Settings.java DEBUG Scrollable result sets: enabled
2021-04-10 15:01:02 Settings.java DEBUG Wrap result sets: disabled
2021-04-10 15:01:02 Settings.java DEBUG JDBC3 getGeneratedKeys(): enabled
2021-04-10 15:01:02 Settings.java DEBUG JDBC result set fetch size: null
2021-04-10 15:01:02 Settings.java DEBUG Connection release mode: AFTER_TRANSACTION
2021-04-10 15:01:02 Settings.java DEBUG Generate SQL with comments: disabled
2021-04-10 15:01:02 Settings.java DEBUG JPA compliance - query : disabled
2021-04-10 15:01:02 Settings.java DEBUG JPA compliance - closed-handling : disabled
2021-04-10 15:01:02 Settings.java DEBUG JPA compliance - lists : disabled
2021-04-10 15:01:02 Settings.java DEBUG JPA compliance - transactions : disabled
2021-04-10 15:01:02 SessionFactoryImpl.java DEBUG Session factory constructed with filter configurations : {}
2021-04-10 15:01:02 SessionFactoryImpl.java DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.3\plugins\junit\lib\junit-rt.jar;D:\Develop\JavaDev\SpringDataJPA-notes\target\test-classes;D:\Develop\JavaDev\SpringDataJPA-notes\target\classes;C:\Users\meethigher\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\meethigher\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.30.Final\hibernate-entitymanager-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\meethigher\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\meethigher\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\meethigher\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\meethigher\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\meethigher\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\meethigher\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\meethigher\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\meethigher\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\meethigher\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\meethigher\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\meethigher\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\meethigher\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\meethigher\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\meethigher\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\meethigher\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\meethigher\.m2\repository\org\hibernate\hibernate-c3p0\5.4.30.Final\hibernate-c3p0-5.4.30.Final.jar;C:\Users\meethigher\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\meethigher\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\meethigher\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meethigher\.m2\repository\mysql\mysql-connector-java\8.0.12\mysql-connector-java-8.0.12.jar;C:\Users\meethigher\.m2\repository\com\google\protobuf\protobuf-java\2.6.0\protobuf-java-2.6.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Shanghai, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=CN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-12.0.2\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit4 top.meethigher.demo01.JPATest01,testSave, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\meethigher, user.language=zh, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=C:\Program Files\Java\jdk-12.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.2+10, user.name=meethigher, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/springdatajpa?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=myJpa, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\MEETHI~1\AppData\Local\Temp\, java.version=12.0.2, user.dir=D:\Develop\JavaDev\SpringDataJPA-notes, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2bac9ba, java.library.path=C:\Program Files\Java\jdk-12.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\Java\jdk-12.0.2\bin;D:\softTools\python38;D:\softTools\OpenSSL-Win64\bin\;D:\Develop\apache-maven-3.6.3\bin;D:\softTools\python38\Scripts;C:\Users\meethigher\AppData\Local\Microsoft\WindowsApps;C:\Users\meethigher\AppData\Roaming\npm;D:\softTools\Fiddler;C:\Program Files\Java\jdk-12.0.2\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=12.0.2+10, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=56.0}
2021-04-10 15:01:02 JaccIntegrator.java DEBUG Skipping JACC integration as it was not enabled
2021-04-10 15:01:02 SessionFactoryImpl.java DEBUG Instantiated session factory
2021-04-10 15:01:02 TypeConfiguration.java DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@eadb475] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ae372b9]
2021-04-10 15:01:02 ClassLoaderAccessImpl.java DEBUG Not known whether passed class name [top.meethigher.demo01.domain.Customer] is safe
2021-04-10 15:01:02 ClassLoaderAccessImpl.java DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : top.meethigher.demo01.domain.Customer
2021-04-10 15:01:02 AbstractEntityPersister.java DEBUG Static SQL for entity: top.meethigher.demo01.domain.Customer
2021-04-10 15:01:02 AbstractEntityPersister.java DEBUG  Version select: select cust_id from customer where cust_id =?
2021-04-10 15:01:02 AbstractEntityPersister.java DEBUG  Snapshot select: select customer_.cust_id, customer_.cust_address as cust_add2_0_, customer_.cust_industry as cust_ind3_0_, customer_.cust_level as cust_lev4_0_, customer_.cust_name as cust_nam5_0_, customer_.cust_phone as cust_pho6_0_, customer_.cust_source as cust_sou7_0_, customer_.hh as hh8_0_ from customer customer_ where customer_.cust_id=?
2021-04-10 15:01:02 DelegatingBasicLogger.java DEBUG  Insert 0: insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source, hh, cust_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-04-10 15:01:02 DelegatingBasicLogger.java DEBUG  Update 0: update customer set cust_address=?, cust_industry=?, cust_level=?, cust_name=?, cust_phone=?, cust_source=?, hh=? where cust_id=?
2021-04-10 15:01:02 DelegatingBasicLogger.java DEBUG  Delete 0: delete from customer where cust_id=?
2021-04-10 15:01:02 AbstractEntityPersister.java DEBUG  Identity insert: insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source, hh) values (?, ?, ?, ?, ?, ?, ?)
2021-04-10 15:01:02 QuerySpacesImpl.java DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f0b3cfe]
2021-04-10 15:01:02 MetamodelGraphWalker.java DEBUG Visiting attribute path : custAddress
2021-04-10 15:01:02 MetamodelGraphWalker.java DEBUG Visiting attribute path : custIndustry
2021-04-10 15:01:02 MetamodelGraphWalker.java DEBUG Visiting attribute path : custLevel
2021-04-10 15:01:02 MetamodelGraphWalker.java DEBUG Visiting attribute path : custName
2021-04-10 15:01:02 MetamodelGraphWalker.java DEBUG Visiting attribute path : custPhone
2021-04-10 15:01:02 MetamodelGraphWalker.java DEBUG Visiting attribute path : custSource
2021-04-10 15:01:02 MetamodelGraphWalker.java DEBUG Visiting attribute path : hh
2021-04-10 15:01:02 FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java DEBUG Building LoadPlan...
2021-04-10 15:01:02 LoadQueryJoinAndFetchProcessor.java DEBUG processing queryspace <gen:0>
2021-04-10 15:01:02 LoadPlanTreePrinter.java DEBUG LoadPlan(entity=top.meethigher.demo01.domain.Customer)
    - Returns
       - EntityReturnImpl(entity=top.meethigher.demo01.domain.Customer, querySpaceUid=<gen:0>, path=top.meethigher.demo01.domain.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=top.meethigher.demo01.domain.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {cust_id1_0_0_}

2021-04-10 15:01:02 EntityLoader.java DEBUG Static select for entity top.meethigher.demo01.domain.Customer [NONE]: select customer0_.cust_id as cust_id1_0_0_, customer0_.cust_address as cust_add2_0_0_, customer0_.cust_industry as cust_ind3_0_0_, customer0_.cust_level as cust_lev4_0_0_, customer0_.cust_name as cust_nam5_0_0_, customer0_.cust_phone as cust_pho6_0_0_, customer0_.cust_source as cust_sou7_0_0_, customer0_.hh as hh8_0_0_ from customer customer0_ where customer0_.cust_id=?
2021-04-10 15:01:02 SqlStatementLogger.java DEBUG drop table if exists customer
2021-04-10 15:01:02 DdlTransactionIsolatorNonJtaImpl.java INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@237f7970] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-10 15:01:02 SqlStatementLogger.java DEBUG create table customer (cust_id bigint not null auto_increment, cust_address varchar(255), cust_industry varchar(255), cust_level varchar(255), cust_name varchar(255), cust_phone varchar(255), cust_source varchar(255), hh varchar(255), primary key (cust_id)) engine=InnoDB
2021-04-10 15:01:02 DdlTransactionIsolatorNonJtaImpl.java INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@250a500b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-10 15:01:02 JtaPlatformInitiator.java DEBUG No JtaPlatform was specified, checking resolver
2021-04-10 15:01:02 JtaPlatformResolverInitiator.java DEBUG No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-10 15:01:02 StandardJtaPlatformResolver.java DEBUG Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-10 15:01:02 JtaPlatformInitiator.java INFO HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-10 15:01:02 NamedQueryRepository.java DEBUG Checking 0 named HQL queries
2021-04-10 15:01:02 NamedQueryRepository.java DEBUG Checking 0 named SQL queries
2021-04-10 15:01:02 SessionFactoryRegistry.java DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7afc4db9
2021-04-10 15:01:02 SessionFactoryRegistry.java DEBUG Registering SessionFactory: a6da6474-aaaf-4469-bb78-fa3bc1e7a1ec (<unnamed>)
2021-04-10 15:01:02 SessionFactoryRegistry.java DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-10 15:01:02 StatisticsInitiator.java DEBUG Statistics initialized [enabled=false]
2021-04-10 15:01:02 TransactionImpl.java DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-10 15:01:02 TransactionImpl.java DEBUG begin
2021-04-10 15:01:02 ActionQueue.java DEBUG Executing identity-insert immediately
2021-04-10 15:01:02 SqlStatementLogger.java DEBUG insert into customer (cust_address, cust_industry, cust_level, cust_name, cust_phone, cust_source, hh) values (?, ?, ?, ?, ?, ?, ?)
2021-04-10 15:01:02 IdentifierGeneratorHelper.java DEBUG Natively generated identity: 1
2021-04-10 15:01:02 ResourceRegistryStandardImpl.java DEBUG HHH000387: ResultSet's statement was not registered
2021-04-10 15:01:02 TransactionImpl.java DEBUG committing
2021-04-10 15:01:02 AbstractFlushingEventListener.java DEBUG Processing flush-time cascades
2021-04-10 15:01:02 AbstractFlushingEventListener.java DEBUG Dirty checking collections
2021-04-10 15:01:02 AbstractFlushingEventListener.java DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-10 15:01:02 AbstractFlushingEventListener.java DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-10 15:01:02 EntityPrinter.java DEBUG Listing entities:
2021-04-10 15:01:02 EntityPrinter.java DEBUG top.meethigher.demo01.domain.Customer{hh=null, custSource=保密, custIndustry=蛇人族, custId=1, custAddress=斗破苍穹, custLevel=斗皇强者, custName=美杜莎, custPhone=保密}
2021-04-10 15:01:02 LogicalConnectionManagedImpl.java DEBUG Initiating JDBC connection release from afterTransaction
2021-04-10 15:01:02 LogicalConnectionManagedImpl.java DEBUG Initiating JDBC connection release from afterTransaction
2021-04-10 15:01:02 SessionFactoryImpl.java DEBUG HHH000031: Closing
2021-04-10 15:01:02 TypeConfiguration.java DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@439e3cb4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ae372b9]
2021-04-10 15:01:02 AbstractServiceRegistryImpl.java DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-04-10 15:01:02 ActiveManagementCoordinator.java DEBUG MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf4e9ag1frqg3hkxlaf4|76ba13c,name=1hgf4e9ag1frqg3hkxlaf4|76ba13c unregistered.
2021-04-10 15:01:02 ActiveManagementCoordinator.java DEBUG C3P0Registry mbean unregistered.
2021-04-10 15:01:02 BasicResourcePool.java DEBUG Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@157b519b
2021-04-10 15:01:02 BootstrapServiceRegistryImpl.java DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-04-10 15:01:02 C3P0PooledConnectionPool.java DEBUG Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@157b519b
2021-04-10 15:01:02 C3P0PooledConnectionPool.java DEBUG Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@157b519b
2021-04-10 15:01:02 BasicResourcePool.java DEBUG Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@157b519b
2021-04-10 15:01:02 BasicResourcePool.java DEBUG Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@79514b0d
2021-04-10 15:01:02 C3P0PooledConnectionPool.java DEBUG Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@79514b0d
2021-04-11 12:32:57 ErrorTracker.java ERROR line 1:8: unexpected token: *
2021-04-11 12:32:57 ErrorTracker.java ERROR line 1:8: unexpected token: *
line 1:8: unexpected token: *
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectClause(HqlBaseParser.java:1380)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectFrom(HqlBaseParser.java:1142)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.queryRule(HqlBaseParser.java:825)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectStatement(HqlBaseParser.java:336)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.statement(HqlBaseParser.java:200)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:294)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:189)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:613)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:23)
	at top.meethigher.demo03.JPQLTest.testFindOrById(JPQLTest.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
